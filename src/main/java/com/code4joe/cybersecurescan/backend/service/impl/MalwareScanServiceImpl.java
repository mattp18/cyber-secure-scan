package com.code4joe.cybersecurescan.backend.service.impl;

import com.code4joe.cybersecurescan.backend.service.MalwareScanService;
import com.code4joe.cybersecurescan.backend.service.PdfService;
import com.code4joe.cybersecurescan.shared.constant.MalwareScanConstants;
import com.code4joe.cybersecurescan.web.model.ScannedFile;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import xyz.capybara.clamav.ClamavClient;
import xyz.capybara.clamav.commands.scan.result.ScanResult;

import java.io.InputStream;
import java.util.Collection;
import java.util.Map;

@Service
@RequiredArgsConstructor
public class MalwareScanServiceImpl implements MalwareScanService {
    Logger log = LoggerFactory.getLogger(MalwareScanServiceImpl.class);

    private final PdfService pdfService;

    private final ClamavClient clamavClient;

    @Override
    public String scanFile(InputStream inputStream, ScannedFile fileToBeScanned) {
        ScanResult result = clamavClient.scan(inputStream);

        if (result instanceof ScanResult.OK) {
            log.info("no virus detected!");
            fileToBeScanned.setPassScan(true);
            pdfService.generatePdf(fileToBeScanned);
            return MalwareScanConstants.SCAN_RESULT_MESSAGE_PASS;
        } else if (result instanceof ScanResult.VirusFound) {
            log.info("virus detected!");
            fileToBeScanned.setPassScan(false);
            Map<String, Collection<String>> viruses = ((ScanResult.VirusFound) result).getFoundViruses();

            if(!viruses.isEmpty()) {
                viruses.forEach((key, value) -> {
                    log.info("key " + key + " " + "value: " + value);
                    fileToBeScanned.setVirusSignature(value.toString());
                });
            } else {
                log.info("Couldn't find virus signature");
            }
            pdfService.generatePdf(fileToBeScanned);

            return MalwareScanConstants.SCAN_RESULT_MESSAGE_FAIL;
        }
        log.info("Scan has ended.");
        return MalwareScanConstants.SCAN_RESULT_MESSAGE_END;
    }
}
